@using ShopOnline.Models.Dtos;
@inject IProductService ProductService
@if(ProductCategoryDtos == null && ErrorMessage == null){
    <DisplaySpinner/>
}
else if(ErrorMessage != null){
    <DisplayError @ErrorMessage="@ErrorMessage"/>
}
else{
    @foreach (var productCategory in ProductCategoryDtos)
    {
        var link = "/ProductsByCategory/" + productCategory.Id;
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@link">
                <span class="@productCategory.IconCSS"></span>&nbsp;@productCategory.Name
            </NavLink>
        </div>
    }
}

@code{
    public IEnumerable<ProductCategoryDto> ProductCategoryDtos { get; set; }
    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ProductCategoryDtos = await ProductService.GetCategories();
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;

        }
    }
}